name: Deploy Workflow

on:
  workflow_dispatch:
    inputs:
      re-deploy:
        required: true
        type: boolean
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_HOST: ssh://${{ vars.SERVER_USERNAME }}@${{ vars.SERVER_HOST }}:${{ vars.SERVER_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      AMQP_USER: ${{ secrets.AMQP_USER }}
      AMQP_PASS: ${{ secrets.AMQP_PASS }}
      DISCORD_DSN: ${{ secrets.DISCORD_DSN }}
      OAUTH_DISCORD_CLIENT_ID: ${{ secrets.OAUTH_DISCORD_CLIENT_ID }}
      OAUTH_DISCORD_CLIENT_SECRET: ${{ secrets.OAUTH_DISCORD_CLIENT_SECRET }}
      JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup castor
        uses: castor-php/setup-castor@v0.1.0

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{ vars.SERVER_PORT }} ${{ vars.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_READ_WRITE_DELETE_ACCESS_TOKEN }}

      - name: Re-Deploy Service
        if: inputs.re-deploy
        run: |
          TAG=$GITHUB_REF_NAME make deploy.prod

      - name: Update Service
        if: ${{ ! inputs.re-deploy }}
        run: |
          make update.service service_update_args="--image barlito/youl-coin-api:$GITHUB_REF_NAME youl_coin_php"
          make update.service service_update_args="--image barlito/youl-coin-worker:$GITHUB_REF_NAME youl_coin_message_worker"
